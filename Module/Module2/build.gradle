plugins {
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}
if (isBuildModule.toBoolean()) {
    //作为独立App应用运行
    apply plugin: 'com.android.application'
} else {
    //作为组件运行
    apply plugin: 'com.android.library'
}

android {
    namespace 'com.chinasoft.module2'
    compileSdk Versions.compile_sdk

    defaultConfig {
        if (isBuildModule.toBoolean()) {
            applicationId "com.chinasoft.module2"
        }
        minSdk Versions.min_sdk
        targetSdk Versions.target_sdk
        versionCode Versions.version_code
        versionName Versions.version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    sourceSets {
        main {
            if (isBuildModule.toBoolean()) {
                //独立运行
                manifest.srcFile 'src/main/alone/AndroidManifest.xml'
            } else {
                //合并到宿主
                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    //正式版本时，排除alone文件夹下所有调试文件
                    exclude 'src/main/alone/*'
                }
            }
        }
    }

    buildFeatures {
        dataBinding = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    testImplementation Dependencies.junit
    androidTestImplementation Dependencies.ext_junit
    androidTestImplementation Dependencies.espresso_core

    implementation project(path: ':common_base')
    implementation project(path: ':common_api')
    implementation project(path: ':Library:common')
    implementation project(path: ':common_res')

    kapt(Dependencies.arouter_compiler)
}